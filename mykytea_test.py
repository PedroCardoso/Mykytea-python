#!/usr/bin/env python
# -*- coding: utf-8 -*-

import unittest

import Mykytea

def showTags(t):
    for word in t:
        out = word.surface + "\t"
        for t1 in word.tag:
            for t2 in t1:
                for t3 in t2:
                    out = out + "/" + str(t3)
                out += "\t"
            out += "\t"
        print out

def list_tags(t):
    return [(word.surface, [[[t3 for t3 in t2] for t2 in t1] for t1 in word.tag]) for word in t]

opt = "-model /usr/local/share/kytea/model.bin -deftag UNKNOWN!!"
mk = Mykytea.Mykytea(opt)

s = "今日はいい天気です。1999"

#分かち書きを取得
for word in mk.getWS(s):
    print word

#解析結果を文字列で取得
print mk.getTagsToString(s)

#1位のタグを取得
t = mk.getTags(s)
showTags(t)

#すべてのタグを取得
tt = mk.getAllTags(s)
showTags(tt)

class SimpleTest(unittest.TestCase):
    """最低限のテスト"""

    def test_word_separation(self):
        """分かち書きを取得"""
        self.assertEqual(
            [elem for elem in mk.getWS(s)],
            ['今日', 'は', 'い', 'い', '天気', 'で', 'す', '。', '1999'])

    def test_as_string(self):
        """解析結果を文字列で取得"""
        self.assertEqual(mk.getTagsToString(s),
                         '今日/名詞/きょう は/助詞/は い/形容詞/い い/語尾/い 天気/名詞/てんき で/助動詞/で す/語尾/す 。/補助記号/。 1999/名詞/１９９９ ')
        
    def test_get_tags(self):
        """1位のタグを取得"""
        self.assertEqual(list_tags(mk.getTags(s)),
                         [('今日', [[['名詞', 3.610404674503611]], [['きょう', 1.0726515803715995]]]),
                          ('は', [[['助詞', 3.5500698037485963]], [['は', 100.0]]]),
                          ('い', [[['形容詞', 2.5966088884369523]], [['い', 100.0]]]),
                          ('い', [[['語尾', 2.7064013574728385]], [['い', 100.0]]]),
                          ('天気', [[['名詞', 4.220721634732509]], [['てんき', 100.0]]]),
                          ('で', [[['助動詞', 2.341672814824213]], [['で', 0.99994530321086]]]),
                          ('す', [[['語尾', 2.548510949215349]], [['す', 0.9998735552127426]]]),
                          ('。', [[['補助記号', 3.05464403402784]], [['。', 100.0]]]),
                          ('1999', [[['名詞', 0.8927861297918125]], [['１９９９', 100.0]]])])

    def test_get_all_tags(self):
        """すべてのタグを取得"""
        self.assertEqual(list_tags(mk.getAllTags(s)),
                         [('今日', [[['名詞', 3.610404674503611],
                                     ['ローマ字文', 0.0],
                                     ['代名詞', -0.07733060899586408]],
                                    [['きょう', 1.0726515803715995],
                                     ['こんにち', 0.0]]]),
                          ('は', [[['助詞', 3.5500698037485963],
                                   ['ローマ字文', 0.0],
                                   ['言いよどみ', -0.3820641956542916]],
                                  [['は', 100.0]]]),
                          ('い', [[['形容詞', 2.5966088884369523],
                                   ['動詞', 0.0],
                                   ['ローマ字文', -0.13562599116197727]],
                                  [['い', 100.0]]]),
                          ('い', [[['語尾', 2.7064013574728385],
                                   ['ローマ字文', 0.0],
                                   ['接頭辞', -0.2872279762703527]],
                                  [['い', 100.0]]]),
                          ('天気', [[['名詞', 4.220721634732509],
                                     ['ローマ字文', 0.0],
                                     ['代名詞', -0.15806036563989823]],
                                    [['てんき', 100.0]]]),
                          ('で', [[['助動詞', 2.341672814824213],
                                   ['ローマ字文', 0.0],
                                   ['空白', -0.3315868530789694]],
                                  [['で', 0.99994530321086],
                                   ['らで', 0.0]]]),
                          ('す', [[['語尾', 2.548510949215349],
                                   ['ローマ字文', 0.0],
                                   ['助詞', -0.25051718167011816]],
                                  [['す', 0.9998735552127426],
                                   ['やす', 0.0]]]),
                          ('。', [[['補助記号', 3.05464403402784],
                                   ['ローマ字文', 0.0],
                                   ['空白', -0.10724310829975892]],
                                  [['。', 100.0]]]),
                          ('1999', [[['名詞', 0.8927861297918125],
                                     ['補助記号', 0.0],
                                     ['URL', -0.19902009480034494]],
                                    [['１９９９', 100.0]]])])


if __name__ == '__main__':
    unittest.main()
